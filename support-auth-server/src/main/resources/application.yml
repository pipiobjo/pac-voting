debug: true

server:
  port: 9999
  contextPath: /auth
  use-forward-headers: true
  error.whitelabel.enabled: false

#security:
#  user:
#    password: password

security:
    # Disable Spring Boot basic authentication
    basic:
      enabled: true
    user:
        password: none
    oauth2:
        client:
            clientId: acme
            clientSecret: acmesecret
            authorized-grant-types: authorization_code,refresh_token,implicit,password,client_credentials
            scope: openid
#        resource:
 #             jwt:
  #              keyValue: |
  #                -----BEGIN PUBLIC KEY-----
   #               MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnGp/Q5lh0P8nPL21oMMrt2RrkT9AW5jgYwLfSUnJVc9G6uR3cXRRDCjHqWU5WYwivcF180A6CWp/ireQFFBNowgc5XaA0kPpzEtgsA5YsNX7iSnUibB004iBTfU9hZ2Rbsc8cWqynT0RyN4TP1RYVSeVKvMQk4GT1r7JCEC+TNu1ELmbNwMQyzKjsfBXyIOCFU/E94ktvsTZUHF4Oq44DBylCDsS1k7/sfZC2G5EU7Oz0mhG8+Uz6MSEQHtoIi6mc8u64Rwi3Z3tscuWG2ShtsUFuNSAFNkY7LkLn+/hxLCu2bNISMaESa8dG22CIMuIeRLVcAmEWEWH5EEforTg+QIDAQAB
    #              -----END PUBLIC KEY-----

    ldap:
        authorities:
            retrieveGroupRoles: true
            groupSearchBase: ou=groups,dc=springframework,dc=org



eureka:
  instance:
    leaseRenewalIntervalInSeconds: 3
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}
  client:
    # Default values comes from org.springframework.cloud.netflix.eurek.EurekaClientConfigBean
    registryFetchIntervalSeconds: 5
    instanceInfoReplicationIntervalSeconds: 5
    initialInstanceInfoReplicationIntervalSeconds: 5
endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true
  health:
    sensitive: false



logging:
  level:
    org.springframework.security: DEBUG

